import pygame
from pygame.locals import *
import random

# Initialize Pygame
pygame.init()

# Screen settings
width = 500
height = 500
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption('Car Game')

# Colors
gray = (100, 100, 100)
green = (76, 208, 56)
red = (200, 0, 0)
white = (255, 255, 255)
yellow = (255, 232, 0)

# Road settings
road_width = 300
marker_width = 10
marker_height = 50
left_lane = 150
center_lane = 250
right_lane = 350
lanes = [left_lane, center_lane, right_lane]
road = (100, 0, road_width, height)
left_edge_marker = (95, 0, marker_width, height)
right_edge_marker = (395, 0, marker_width, height)
lane_marker_move_y = 0

# Player settings
player_x = 250
player_y = 400
clock = pygame.time.Clock()
fps = 60
gameover = False
speed = 2
score = 0

# Vehicle class
class Vehicle(pygame.sprite.Sprite):
    def __init__(self, image, x, y):
        super().__init__()
        image_scale = 45 / image.get_rect().width
        new_width = int(image.get_rect().width * image_scale)
        new_height = int(image.get_rect().height * image_scale)
        self.image = pygame.transform.scale(image, (new_width, new_height))
        self.rect = self.image.get_rect()
        self.rect.center = [x, y]

# Player class
class PlayerVehicle(Vehicle):
    def __init__(self, x, y):
        image = pygame.image.load(r'C:\Users\DELL\Downloads\car (1).png')
        super().__init__(image, x, y)

# Groups
player_group = pygame.sprite.Group()
vehicle_group = pygame.sprite.Group()
player = PlayerVehicle(player_x, player_y)
player_group.add(player)

# Load enemy vehicle images
image_filenames = [
    r'C:\Users\DELL\Downloads\pickup_truck.png',
    r'C:\Users\DELL\Downloads\semi_trailer.png',
    r'C:\Users\DELL\Downloads\taxi.png',
    r'C:\Users\DELL\Downloads\van.png'
]
vehicle_images = [pygame.image.load(img) for img in image_filenames]

# Load crash image
crash = pygame.image.load(r'C:\Users\DELL\Downloads\crash.png')
crash_rect = crash.get_rect()

# Game loop
running = True
while running:
    clock.tick(fps)

    for event in pygame.event.get():
        if event.type == QUIT:
            running = False

        if event.type == KEYDOWN and not gameover:
            if event.key == K_LEFT and player.rect.centerx > left_lane:
                player.rect.x -= 100
            elif event.key == K_RIGHT and player.rect.centerx < right_lane:
                player.rect.x += 100
            # Side collision detection
            for vehicle in vehicle_group:
                if pygame.sprite.collide_rect(player, vehicle):
                    gameover = True
                    if event.key == K_LEFT:
                        player.rect.left = vehicle.rect.right
                        crash_rect.center = [player.rect.left, (player.rect.centery + vehicle.rect.centery) / 2]
                    elif event.key == K_RIGHT:
                        player.rect.right = vehicle.rect.left
                        crash_rect.center = [player.rect.right, (player.rect.centery + vehicle.rect.centery) / 2]

    # Draw background
    screen.fill(green)
    pygame.draw.rect(screen, gray, road)
    pygame.draw.rect(screen, yellow, left_edge_marker)
    pygame.draw.rect(screen, yellow, right_edge_marker)

    # Move lane markers
    lane_marker_move_y += speed * 2
    if lane_marker_move_y >= marker_height * 2:
        lane_marker_move_y = 0
    for y in range(-marker_height * 2, height, marker_height * 2):
        pygame.draw.rect(screen, white, (left_lane + 45, y + lane_marker_move_y, marker_width, marker_height))
        pygame.draw.rect(screen, white, (center_lane + 45, y + lane_marker_move_y, marker_width, marker_height))

    player_group.draw(screen)

    # Add vehicles
    if len(vehicle_group) < 2:
        add_vehicle = True
        for vehicle in vehicle_group:
            if vehicle.rect.top < vehicle.rect.height * 1.5:
                add_vehicle = False
        if add_vehicle:
            lane = random.choice(lanes)
            image = random.choice(vehicle_images)
            vehicle = Vehicle(image, lane, height / -2)
            vehicle_group.add(vehicle)

    # Move and draw enemy vehicles
    for vehicle in vehicle_group:
        vehicle.rect.y += speed
        if vehicle.rect.top >= height:
            vehicle.kill()
            score += 1
            if score > 0 and score % 5 == 0:
                speed += 1

    vehicle_group.draw(screen)

    # Show score
    font = pygame.font.Font(pygame.font.get_default_font(), 16)
    text = font.render('Score: ' + str(score), True, white)
    text_rect = text.get_rect()
    text_rect.center = (50, 400)
    screen.blit(text, text_rect)

    # Collision check
    collided = pygame.sprite.spritecollideany(player, vehicle_group)
    if collided:
        gameover = True
        crash_rect.center = [player.rect.centerx, player.rect.top]

    # Game over handling
    if gameover:
        screen.blit(crash, crash_rect)
        pygame.draw.rect(screen, red, (0, 50, width, 100))
        text = font.render('Game Over. Play again? (Y/N)', True, white)
        text_rect = text.get_rect(center=(width / 2, 100))
        screen.blit(text, text_rect)

    pygame.display.update()

    while gameover:
        clock.tick(fps)
        for event in pygame.event.get():
            if event.type == QUIT:
                running = False
                gameover = False
            if event.type == KEYDOWN:
                if event.key == K_y:
                    gameover = False
                    score = 0
                    speed = 2
                    vehicle_group.empty()
                    player.rect.center = [player_x, player_y]
                elif event.key == K_n:
                    gameover = False
                    running = False

pygame.quit()
